###############################################
# FILE: funcs
# SUBJ: comment
# AUTH: Your Name
# CREATED: 2022-8-9 16:57:7
# MODIFIED:
###############################################

@DECL

# palavra com letras repetidas v0
#LetrasReps(L("palavra"),L("letras")){
#	L("comp_plv") = strlength(L("palavra"));
#	L("comp_ltr") = strlength(L("letras"));
#	if(strequalnocase(strchar(L("palavra"), 0),strchar(L("letras"), 0)) && L("comp_plv") > L("comp_ltr")){
#		"passei pelo ponto (1).txt" << L("c") << "   " << L("j") << "   ////   ";
#		L("c") = 1;
#		while(L("c")<L("comp_plv")){
#			"passei pelo ponto (2).txt" << L("c") << "   " << L("j") << "   ////   ";
#			L("j") = 0;
#			while(L("j")<L("comp_ltr")-1){
#				"passei pelo ponto (3).txt" << L("c") << "   " << L("j") << "   ////   ";
#				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("letras"), L("j")))){
#					"passei pelo ponto (4).txt" << L("c") << "   " << L("j") << "   ////   ";
#					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("j")))){
#						"passei pelo ponto (5).txt" << L("c") << "   " << L("j") << "   ////   ";
#						if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("j")+1))){
#							"passei pelo ponto (6).txt" << L("palavra");
#							return 0;
#						}
#					}
#				}
#				L("j")++;
#			}
#			if(L("j")>=L("comp_ltr")-1){
#				"passei pelo ponto (7).txt" << "oi";
#				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("letras"), L("comp_ltr")-1))){
#					"passei pelo ponto (8).txt" << "oi";
#					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("comp_ltr")-1))){
#						"passei pelo ponto (9).txt" << L("palavra");
#						return 0;
#					}
#				}
#			}
#			L("c")++;
#		}
#		return 1;
#	}
#	return 0;
#}

# palavra com letras repetidas v1
LetrasRep(L("palavra"),L("letras")){
	L("comp_plv") = strlength(L("palavra"));
	L("comp_ltr") = strlength(L("letras"));
	if(strequalnocase(strchar(L("palavra"), 0),strchar(L("letras"), 0)) && L("comp_plv") > L("comp_ltr")){
		"passei pelo ponto (1).txt" << L("c") << "   " << L("j") << "   ////   ";
		L("c") = 1;
		while(L("c")<L("comp_plv")){
			"passei pelo ponto (2).txt" << L("c") << "   " << L("j") << "   ////   ";
			if(L("j")<L("comp_ltr")-1){
				"passei pelo ponto (3).txt" << L("c") << "   " << L("j") << "   ////   ";
				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("letras"), L("j")))){
					"passei pelo ponto (4).txt" << L("c") << "   " << L("j") << "   ////   ";
					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("j")))){
						"passei pelo ponto (5).txt" << L("c") << "   " << L("j") << "   ////   ";
						if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("j")+1))){
							"passei pelo ponto (6).txt" << L("palavra");
							return 0;
						}
						else{
							L("j")++;
						}
					}
				}
			}
			else{
				"passei pelo ponto (7).txt" << "oi";
				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("letras"), L("comp_ltr")-1))){
					"passei pelo ponto (8).txt" << "oi";
					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("comp_ltr")-1))){
						"passei pelo ponto (9).txt" << L("palavra");
						return 0;
					}
				}
			}
			L("c")++;
		}
		if(strequalnocase(strchar(L("palavra"), L("comp_plv")-1),strchar(L("letras"), L("comp_ltr")-1))){
			return 1;
		}
		return 0;
	}
	return 0;
}

# comeca com algumas letras e termina com letras repetidas
FinalRep(L("palavra"),L("inicio"),L("fim")){
	L("comp_plv") = strlength(L("palavra"));
	L("comp_in") = strlength(L("inicio"));
	L("comp_fim") = strlength(L("fim"));
	L("in_ok") = 1;
	while(L("i")<L("comp_in") && L("in_ok") == 1){
		if(strequalnocase(strchar(L("palavra"), L("i")),strchar(L("inicio"), L("i")))){
			L("in_ok") = 1;
		}
		else{
			L("in_ok") = 0;
		}
		L("i")++;
	}
	if(L("in_ok") == 1 && strequalnocase(strchar(L("palavra"), L("comp_in")),strchar(L("fim"), 0))){
		L("c") = L("comp_in")+1;
		"passei pelo ponto (4).txt" << L("c") << "    " << L("comp_plv");
		while(L("c")<L("comp_plv")){
			"passei pelo ponto (7).txt" << L("c");
			while(L("j")<L("comp_fim")-1){
				"passei pelo ponto (8).txt" << L("c");
				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("fim"), L("j")))){
					"passei pelo ponto (9).txt" << L("c");
					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("fim"), L("j")))){
						"passei pelo ponto (10).txt" << L("c");
						if(strequalnocase(strchar(L("palavra"), L("c")),strchar(L("fim"), L("j")+1))){
							"passei pelo ponto (11).txt" << L("c");
							if(strnotequalnocase(strchar(L("palavra"), L("c")+1),strchar(L("fim"), L("j")+1))){
								return 0;
							}
							"passei pelo ponto (1).txt" << L("c");
							L("c")++;
						}
						else{
							return 0;
						}
					}
					else{
						L("j")++;
					}
					"passei pelo ponto (2).txt" << L("c");
				}
				else{
					L("j")++;
					"passei pelo ponto (3).txt" << L("c");
				}
			}
			if(L("j")>L("comp_fim")-2){
				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("fim"), L("comp_fim")-1))){
					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("fim"), L("comp_fim")-1))){
						return 0;
					}
				}
			}
			L("c")++;
		}
		if(strequalnocase(strchar(L("palavra"), L("comp_plv")-1),strchar(L("fim"), L("comp_fim")-1))){
			return 1;
			"passei pelo ponto (5).txt" << L("c");
		}
		"passei pelo ponto (6).txt" << L("c");
		return 0;
	}
	return 0;
}

# ordem aleatoria de letras
AleRep(L("palavra"),L("letras")){
	L("comp") = strlength(L("palavra"));
	L("comp2") = strlength(L("letras"));
	if(L("comp")>L("comp2") && strlength(struniquechars(L("palavra")))==L("comp2")){
		while(L("c")<L("comp")){
			L("check") = 0;
			L("i") = 0;
			while(L("i")<L("comp2") && L("check")==0){
				if(strequalnocase(strchar(L("palavra"), L("c")),strchar(L("letras"), L("i")))){
					L("check") = 1;
				}
				L("i")++;
			}
			if(L("check")==0){
				return 0;
			}
			L("c")++;
		}
		return 1;
	}
	return 0;
}

# 2 letras em ordem repetidas
OrdRep(L("palavra"),L("trecho")){
	L("comp") = strlength(L("palavra"));
	L("comp2") = strlength(L("trecho"));
	if(L("comp")>L("comp2")){
		while(L("i")<L("comp2")){
			if(strequalnocase(strchar(L("palavra"), 0),strchar(L("trecho"), L("i")))){
				L("1letra") = 1;
			}
			L("i")++;
		}
		if(L("1letra") == 1){
			L("c") = 1;
			while(L("c")<L("comp")){
				L("i") = 0;
				while(L("i")<L("comp2")-1){
					if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("trecho"), L("i")))){
						if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("trecho"), L("i")+1))){
							return 0;
						}
					}
					L("i")++;
				}
				if(strequalnocase(strchar(L("palavra"), L("c")-1),strchar(L("trecho"), L("comp2")-1))){
					if(strnotequalnocase(strchar(L("palavra"), L("c")),strchar(L("trecho"), 0))){
						return 0;
					}
				}
				L("c")++;
			}
			return 1;
		}
		return 0;
	}
	return 0;
}

AddEmotion(L("node")){
	L("emocao") = pnvar(L("node"),"emocao");
	L("con") = AddUniqueCon(G("emocao"),L("emocao"));
	IncrementCount(L("con"),"contagem");
}

#AddEmotionTeste(L("node")){
#	L("emocao") = pnvar(L("node"),"emocao");
#	L("intensidade") = pnvar(L("node"),"intensidade");
#	L("con") = AddUniqueConVal(G("emocao"),L("emocao"),L("intensidade"));
#	IncrementCount(L("con"),"intensidade");
#}

#ZeroEmotion() {
#	L("con") = down(G("emocao"));
#	while (L("con")) {
#		replaceval(L("con"),"contagem",0);
#		L("con") = next(L("con"));
#	}
#	return 1;
#}

#AddEmotion1(L("node")){
#	L("engracado") = pnvar(L("node"),"engracado");
#	L("eng") = AddUniqueCon(G("engracado"),L("engracado"));
#	IncrementCount(L("eng"),"engracado");
#	L("felicidade") = pnvar(L("node"),"felicidade");
#	L("fel") = AddUniqueCon(G("felicidade"),L("felicidade"));
#	IncrementCount(L("fel"),"felicidade");
#}

@@DECL
